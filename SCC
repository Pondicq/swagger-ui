# Example YAML to get you started quickly.
# Be aware that YAML has indentation based scoping.
# Code completion support is available so start typing for available options.
swagger: '2.0'

# This is your document metadata
info:
  contact:
    name: apiteam-gp@orange.com
  description: "Une API pour afficher le suivi conso des dossiers d'un contrat"
  version: "0.7"
  title: "API SCC - Suivi Conso Convergent"
host: consumptions-apidsif.kermit.rd.francetelecom.fr
basePath: /api-docs
paths:
  /consumptionFollow:
    get:
      description: "Récupère le suivi dess consommations des différents usages des dossiers pour unun contrat"
      parameters:
        - name: callerId
          description: "Id de l’application appelante"
          in: header
          required: true
          type: string
        - name: version
          description: "Version de la brique FPC (utilitée potentielle pour la compatibilité ascendante)"
          in: header
          required: true
          type: string
        - name: channel
          description: "Type de canal de restitution (WEB ou MOB)"
          in: header
          required: true
          type: string
        - name: traceId
          description: "Identifiant temporel permettant la traçabilité des informations de bout en bout et servant lors de l’enregistrement des logs FPC et des partenaires sud"
          in: header
          required: true
          type: string
        - name: marketChannel
          description: "Univers du contrat - anciennement credentialKey"
          in: query
          required: true
          type: string
          enum: ["Fixe","Mobile","Internet"]
        - name: contractId
          description: "CUID "
          in: query
          required: true
          type: string
      responses:
        200:
          description: "OK"
          schema:
            $ref: "#/definitions/consumptionContract"
        400:
          description: "Erreur de syntaxe dans la requête"
          schema:
            $ref: "#/definitions/Error"
        422:
          description: "Erreur de validation dans les paramètres d'entrée"
          schema:
            $ref: "#/definitions/Error"
        500:
          description: "Suite à une erreur technique, le suivi conso n'a pas pu être récupéré"
          schema:
            $ref: "#/definitions/Error"
      tags:
        - SuiviConso
      summary: Suivi des consommations d'un contrat
definitions:
  consumptionContract:
    properties:
      cuId:
        description: "Identifiant de contrat"
        type: string
      allocations:
        description: "Données contractuelles"
        $ref: "#/definitions/contractValues"
      usages:
        description: "La liste des usages d'un contrat"
        type: array
        items:
            $ref: "#/definitions/usage"
        minimum: 1

  contractValues:          
    properties:
      DateSouscription:
        description: "Date de souscription du contrat" 
        type: string
        format: date
      UsageAllocations:
        description: "Valeur contractuelle de chaque usage" 
        $ref: "#/definitions/usageContractAllocation"
  usageContractAllocation:         
    properties:
      UsageVoiceType:
        description: "Unité pour l'usage voix" 
        type: string
        enum: ["minutes"]
      UsageVoiceValue:
        description: "Valeur contractuelle pour l'usage voix" 
        type: string
      UsageDataType:
        description: "Unité pour l'usage Data" 
        type: string
        enum: ["GO ","MegaO"]
      UsageDataValue:
        description: "Valeur contractuelle pour l'usage Data" 
        type: string
      UsageSMSType:
        description: "Unité pour l'usage SMS" 
        type: integer
  usage:
    properties:
      usageType:
        description: "Type d'usage (00=voix, 01=sms, 02=mms, 03=data, 04=session data, 05=data wifi, 06=data mobilité volume, 07=data mobilité durée, 99=pseudo compteur)"
        type: string
        enum: ["00","01","02","03","04","05","06","07","99"]
      buckets:
        description: "La liste des godets qui utilisent l'usage"
        type: array
        items:
            $ref: "#/definitions/bucket"
        minimum: 1
      usageGlobalCounts:
        description: "Agregats de compteurs par usage- en prévision de contrats avec usages partagés"
        type: array
        items:
            $ref: "#/definitions/counters"
        minimum: 1        
  bucket:
    description: "Un godet est constitué par un dossier ( Ligne) et les consommations qui s'y rapportent"
    properties:
       bucketId:
        description: "Identifiant de godet"
        type: integer
       folder:
        description: "Un folder est un dossier du contrat (ligne). il est identifié par une clé de parc"
        $ref: "#/definitions/product"
        minimum: 1
       bucketMeters:
        description: "La liste des compteurs du dossier"
        type: array
        items:
            $ref: "#/definitions/counters"
        minimum: 1
  product:
    description: "Un folder est un dossier du contrat"
    properties:
       publicInstalledKey:
        description: "clé de parc du dossier"
        type: string
       productType:
        description: "Type de trafic (mobile, fixe, livebox)"
        type: string
        enum: ["mobile","fixe","livebox"]  
  counters:
    description: " liste des compteurs"
    properties:
      includeType:
        description: " unité du compteur -inclus dans forfait-'"
        type: string
        enum: ["GO ", "minutes"]
      includeValue: 
        description: " valeur du compteur -inclus dans forfait-"
        type: string 
      excludeType:
        description: " unité du compteur -hors forfait-"
        type: string
        enum: ["GO ", "minutes"]
      excludeValue: 
        description: " valeur du compteur hors forfai-t"
        type: string 
      exceedType:
        description: " unité du compteur -dépassement de forfait-"
        type: string
        enum: ["GO ", "minutes"]
      exceedValue: 
        description: " valeur du compteur- dépassement de forfait-"
        type: string 
  Error:
   properties:
     appErrCode:
       description: "Code applicatif de l'erreur"
       format: int32
       type: integer
     devMessage:
       description: "Message technique à destination des développeur, clients de l'API"
       type: string
     userMessage:
       description: "Message fonctionnel à destination de l'utilisateur final que le développeur peut utiliser tel quel."
       type: string
     moreInfo:
       description: "Une url qui pointe vers la documentation en ligne à destination des développeurs pour des informations plus précises concernant l'erreur."
       type: string
